*Instalation de la bibliothèque:
pip install opencv-python mediapipe numpy pyserial


*code pour le OpenCV:
import cv2, mediapipe as mp, serial, numpy as np

# Initialisation
mp_hands = mp.solutions.hands
hands = mp_hands.Hands(min_detection_confidence=0.8)
arduino = serial.Serial('COM3', 9600)  # Changez COM3 si nécessaire

cap = cv2.VideoCapture(0)  # Utilise la caméra du PC

while True:
    success, img = cap.read()
    if not success: continue
    
    img = cv2.flip(img, 1)  # Miroir
    img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    results = hands.process(img_rgb)
    
    if results.multi_hand_landmarks:
        for hand in results.multi_hand_landmarks:
            # Points des doigts (extrémités)
            fingers = [4, 8, 12, 16, 20]  # Pouce, Index, Majeur, Annulaire, Auriculaire
            angles = []
            
            for fid in fingers:
                y = hand.landmark[fid].y
                angle = int(np.interp(y, [0.2, 0.8], [0, 180]))  # Conversion en angle
                angles.append(angle)
            
            # Envoi à l'Arduino (ex: "90,45,120,30,180")
            arduino.write(f"{','.join(map(str, angles))}\n".encode())
            
            # Dessiner les landmarks (optionnel)
            mp.solutions.drawing_utils.draw_landmarks(img, hand, mp_hands.HAND_CONNECTIONS)
    
    cv2.imshow("Contrôle IA", img)
    if cv2.waitKey(1) == ord('q'): break

cap.release()
cv2.destroyAllWindows()