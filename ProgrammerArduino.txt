#include <Servo.h>

// Déclaration des servos
Servo thumb;    // Pouce
Servo index;    // Index
Servo middle;   // Majeur
Servo ring;     // Annulaire
Servo pinky;    // Auriculaire

void setup() {
  // Attache les servos aux broches PWM
  thumb.attach(9);
  index.attach(10);
  middle.attach(11);
  ring.attach(12);
  pinky.attach(13);
  
  // Initialise la communication série
  Serial.begin(9600);
  while (!Serial); // Attend que le port série soit prêt (pour les cartes avec USB natif)
  delay(2000);     // Délai de stabilisation (optionnel mais recommandé)
}

void loop() {
  if (Serial.available() > 0) {
    String data = Serial.readStringUntil('\n');
    data.trim(); // Supprime les espaces et retours chariot
    
    // Découpe la chaîne reçue (format: "angle1,angle2,angle3,angle4,angle5")
    int angles[5];
    int index = 0;
    int lastComma = -1;
    
    for (int i = 0; i < data.length(); i++) {
      if (data.charAt(i) == ',' || i == data.length() - 1) {
        String angleStr = data.substring(lastComma + 1, i + (i == data.length() - 1 ? 1 : 0));
        angles[index++] = angleStr.toInt();
        lastComma = i;
        if (index >= 5) break; // Sécurité contre les débordements
      }
    }
    
    // Applique les angles aux servos (avec vérification des limites)
    if (index == 5) { // S'il y a bien 5 angles reçus
      thumb.write(constrain(angles[0], 0, 180));
      index.write(constrain(angles[1], 0, 180));
      middle.write(constrain(angles[2], 0, 180));
      ring.write(constrain(angles[3], 0, 180));
      pinky.write(constrain(angles[4], 0, 180));
    }
  }
}